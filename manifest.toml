name = "celestia"

[defaults]
builder = "docker:generic"
runner = "local:docker"

[builders."docker:generic"]
enabled = true
build_base_image = "golang:1.19.1"
go_version = "1.19"
enable_go_build_cache = true

[runners."local:docker"]
enabled = true

[runners."cluster:k8s"]
enabled = true

[[testcases]]
name = "001-val-large-txs"
instances = { min = 1, max = 200, default = 3 }
    [testcases.params]
    execution-time = { type = "int" }
    latency = { type = "int", default = 0}
    bandwidth = { type = "string", default = "256Mib"}
    validator = { type = "int", default = 3}
    persistent-peers = { type = "int", default = 3}
    seed = { type = "int", default = 1}
    submit-times = { type = "int", default = 4}
    msg-size = { type = "int", default = 10000}

[[testcases]]
name = "002-da-sync"
instances = { min = 4, max = 3000, default = 12 }
    [testcases.params]
    execution-time = { type = "int" }
    latency = { type = "int", default = 0}
    bandwidth = { type = "string", default = "256Mib"}
    validator = { type = "int", default = 3}
    persistent-peers = { type = "int", default = 3}
    seed = { type = "int", default = 1}
    submit-times = { type = "int", default = 4}
    msg-size = { type = "int", default = 10000}
    bridge = { type = "int", default = 3}
    full = { type = "int", default = 3}
    light = { type = "int", default = 3}
    block-height = { type = "int" }
    role = { type = "string" }

[[testcases]]
name = "003-full-sync-past"
instances = { min = 4, max = 3000, default = 12 }
    [testcases.params]
    execution-time = { type = "int" }
    latency = { type = "int", default = 0}
    bandwidth = { type = "string", default = "256Mib"}
    validator = { type = "int", default = 3}
    persistent-peers = { type = "int", default = 3}
    seed = { type = "int", default = 1}
    submit-times = { type = "int", default = 4}
    msg-size = { type = "int", default = 10000}
    bridge = { type = "int", default = 3}
    full = { type = "int", default = 3}
    light = { type = "int", default = 3}
    block-height = { type = "int" }
    role = { type = "string" }

[[testcases]]
name = "004-full-light-past"
instances = { min = 4, max = 3000, default = 12 }
    [testcases.params]
    execution-time = { type = "int" }
    latency = { type = "int", default = 0}
    bandwidth = { type = "string", default = "256Mib"}
    validator = { type = "int", default = 3}
    persistent-peers = { type = "int", default = 3}
    seed = { type = "int", default = 1}
    submit-times = { type = "int", default = 4}
    msg-size = { type = "int", default = 10000}
    bridge = { type = "int", default = 3}
    full = { type = "int", default = 3}
    light = { type = "int", default = 3}
    block-height = { type = "int" }
    role = { type = "string" }

[[testcases]]
name = "005-light-das-past"
instances = { min = 4, max = 3000, default = 12 }
    [testcases.params]
    execution-time = { type = "int" }
    latency = { type = "int", default = 0}
    bandwidth = { type = "string", default = "256Mib"}
    validator = { type = "int", default = 3}
    persistent-peers = { type = "int", default = 3}
    seed = { type = "int", default = 1}
    submit-times = { type = "int", default = 4}
    msg-size = { type = "int", default = 10000}
    bridge = { type = "int", default = 3}
    full = { type = "int", default = 3}
    light = { type = "int", default = 3}
    block-height = { type = "int" }
    role = { type = "string" }

[[testcases]]
name = "pay-for-blob"
instances = { min = 4, max = 3000, default = 12 }
    [testcases.params]
    execution-time = { type = "int" }
    latency = { type = "int", default = 0}
    bandwidth = { type = "string", default = "256Mib"}
    validator = { type = "int", default = 3}
    persistent-peers = { type = "int", default = 3}
    seed = { type = "int", default = 1}
    submit-times = { type = "int", default = 4}
    namespace-id = { type = "string", default = "1"}
    msg-size = { type = "int", default = 10000}
    bridge = { type = "int", default = 3}
    full = { type = "int", default = 3}
    light = { type = "int", default = 3}
    block-height = { type = "int" }
    role = { type = "string" }

[[testcases]]
name = "get-shares-by-namespace"
instances = { min = 4, max = 3000, default = 12 }
    [testcases.params]
    execution-time = { type = "int" }
    latency = { type = "int", default = 0}
    bandwidth = { type = "string", default = "256Mib"}
    validator = { type = "int", default = 3}
    persistent-peers = { type = "int", default = 3}
    seed = { type = "int", default = 1}
    submit-times = { type = "int", default = 4}
    namespace-id = { type = "string", default = "1"}
    msg-size = { type = "int", default = 10000}
    bridge = { type = "int", default = 3}
    full = { type = "int", default = 3}
    light = { type = "int", default = 3}
    block-height = { type = "int" }
    role = { type = "string" }

[[testcases]]
name = "reconstruction"
instances = { min = 4, max = 3000, default = 12 }
    [testcases.params]
    execution-time = { type = "int" }
    latency = { type = "int", default = 0}
    bandwidth = { type = "string", default = "256Mib"}
    validator = { type = "int", default = 3}
    persistent-peers = { type = "int", default = 3}
    seed = { type = "int", default = 1}
    submit-times = { type = "int", default = 20}
    msg-size = { type = "int", default = 10000}
    bridge = { type = "int", default = 3}
    full = { type = "int", default = 3}
    light = { type = "int", default = 3}
    block-height = { type = "int" }
    role = { type = "string" }

[[testcases]]
name = "001-lights-dasing-latest-from-bridges"
instances = { min = 30, max = 1002, default = 30 }
    [testcases.params]
    execution-time = { type = "int" }
    latency = { type = "int", default = 60}
    bandwidth = { type = "string", default = "256Mib"}
    validator = { type = "int", default = 3}
    persistent-peers = { type = "int", default = 3}
    submit-times = { type = "int", default = 4}
    msg-size = { type = "int", default = 10000 }
    bridge = { type = "int", default = 3}
    light = { type = "int", default = 3}
    block-height = { type = "int" }
    role = { type = "string" }
